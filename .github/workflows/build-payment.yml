name: build payment
on: 
  push:
    branches:
      - "main"
    # paths: 
    #   - 'payment/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with: 
          node-version: "16.x"
      - name: Building application
        run: |
          cd payment
          npm i -g @nestjs/cli
          npm install
          npm run build

  build-and-publish-docker:
    needs: build
    name: 'build and publish docker'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   run: |
      #       cd payment
      #       ls
      #       docker build ivanmds/poc_event_driven_payment:1.0.4 .
      #       docker push ivanmds/poc_event_driven_payment:1.0.4

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ivanmds/poc_event_driven_payment

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./payment
          push: true
          tags: ivanmds/poc_event_driven_payment:1.0.4
        
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./payment
      #     push: true
      #     tags: ivanmds/poc_event_driven_payment:1.0.4

      
#   checking_approval:
#     name: checking external approval
#     if: github.event_name == 'repository_dispatch' && github.event.action == 'release_was_analysed'
#     needs: [build]
#     runs-on: ubuntu-latest
#     steps:
#       - name: checking if release wasn't approved 
#         if: github.event.client_payload.wasApproved == false
#         run: |
#           echo release wasn't approved
#           exit 1
#       - name: checking if release was approved
#         run: echo release was approved

#   deploy_prod:
#     name: 'deploy to production'
#     runs-on: ubuntu-latest
#     needs: [checking_approval]
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           ref: main
#       - run: ls -a
#       - uses: trstringer/manual-approval@v1
#         with:
#           secret: ${{ github.TOKEN }}
#           minimum-approvals: 1
#           approvers: ivanmds
#           issue-title: "Deploying to production"
#       - run: echo 'deploy container to prod'